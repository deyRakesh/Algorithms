#include <stdio.h>
int n,m=0;
#define max(x,y) (x)>(y)?(x):(y);
    


int kzo(int arr[][2],int n,int m)
{
	int i,j;
	int dp[n+1][m+1];
	for (i = 0; i < m+1; i++)
	{
		dp[0][i]=0;
	}
	  
	for (i = 1; i < n+1; i++)
	{
		for (j = 0; j < m+1; j++)
		{
			if(arr[i][1]>j)
				dp[i][j]=dp[i-1][j];
			else 
			dp[i][j]=max(dp[i-1][j],dp[i][j-arr[i][1]]+arr[i][0]);
		}
	}   
	                                                                                                                                                                                                         
	return dp[n][m];
}

int main(int argc, char **argv)
{
	printf("Enter number of items:");
	scanf("%d",&n);
	int i,arr[n][2];
	printf("Enter profits: ");
	for (i = 0; i < n; i++)
	{
		scanf("%d",&arr[i][0]);
	}
	printf("Enter weights: ");
	for (i = 0; i < n; i++)
	{
		scanf("%d",&arr[i][1]);
	}
	printf("Enter knapsack capacity: ");
	scanf("%d",&m);
	int r=kzo(arr,n,m);
	printf("Total profit: %d\n",r);
	
	return 0;
}
