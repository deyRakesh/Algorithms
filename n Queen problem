#include <stdio.h>
#include <string.h>

int N=10;

void print_sol(int b[N][N])
{
	static int k=1;
	printf("%d-\n",k++); 
	for (int i = 0; i < N; i++) 
	{ 
		for (int j = 0; j < N; j++) 
			printf(" %d ", b[i][j]); 
		printf("\n"); 
	} 
	printf("\n");
}

int isSafe(int b[N][N],int x,int y)
{
	int i,j;
	for (i = 0; i < y; i++)
	{
		if(b[x][i]==1)
			return 0;
	}
	for(i=x,j=y;i>=0&&j>=0;i--,j--)
	{
		if(b[i][j]==1)
			return 0;
	}
	for (i = x,j=y; i<N&&j>=0 ; i++,j--)
	{
		if(b[i][j]==1)
			return 0;
	}
	return 1;
}

int nqueen(int b[N][N],int col)
{
	if(col==N)
	{
		print_sol(b);
		return 1;
	}
	int i,r=0;
	for (i = 0; i < N; i++)
	{
		if(isSafe(b,i,col))
		{
			b[i][col]=1;
			r=(nqueen(b,col+1)||r);
			b[i][col]=0;
		}
	}
	return r;
}

int main(int argc, char **argv)
{
	scanf("%d",&N);
	int b[N][N];
	memset(b,0,sizeof(b));
	int a;
	a=nqueen(b,0);
	if(a==0)
		printf("No solutions exist\n");
	
	return 0;
}
